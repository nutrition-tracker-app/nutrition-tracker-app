rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read and write only their own data
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }
    
    // Allow users to read, create, update and delete only their own meals
    match /meals/{mealId} {
      // Everyone can read meal definitions
      allow read: if request.auth != null;
      // Only creator can update or delete
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.createdBy;
      allow create: if request.auth != null;
    }
    
    // Allow users to read, create, update and delete only their own diary entries
    match /userMeals/{entryId} {
      allow read, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Allow users to read, create, update and delete only their own metrics
    match /userMetrics/{metricId} {
      allow read, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Allow users to read, create, update and delete only their own streaks
    match /userStreaks/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow reading and creating cached food data by anyone who is authenticated
    match /cachedFoods/{foodId} {
      allow read, create: if request.auth != null;
    }
  }
}